{"version":3,"sources":["Utils/utilityFunctions.ts","Redux/Actions/Actions.ts","Redux/Reducers/rootReducer.ts","Utils/constants.ts","Components/Table/TableCell/TableCellStyles.ts","Components/Table/TableCell/TableCell.tsx","Components/Table/TableRow/TableRowStyles.ts","Components/Table/TableRow/TableRow.tsx","Components/Buttons/UpButton/UpButtonStyles.ts","Components/Buttons/UpButton/UpButton.tsx","Components/Buttons/DownButton/DownButtonStyles.ts","Components/Buttons/DownButton/DownButton.tsx","Components/Table/TableHeader/TableHeaderStyles.ts","Components/Table/TableHeader/TableHeader.tsx","Components/LoadingSpinner/LoadingSpinnerStyles.ts","Components/LoadingSpinner/LoadingSpinner.tsx","Components/Table/TableStyles.ts","Components/Table/Table.tsx","Pages/App/App.tsx","Utils/serviceWorker.ts","index.tsx"],"names":["formattedDate","newDate","Date","toLocaleDateString","formatPeopleData","data","map","item","name","height","mass","eye_color","hair_color","created","edited","sortArrayData","sortString","arr","order","vals","key","a","b","hasOwnProperty","isNum","val","test","varA","toUpperCase","parseInt","varB","comparison","compareValues","replace","sort","fetchPeople","dispatch","fetch","then","results","json","console","log","type","people","catch","error","peopleState","combineReducers","peopleReducer","state","action","Object","assign","sortBy","sizes","colors","StyledTableCell","styled","td","TableCell","props","children","StyledTableRow","tr","connect","allPeople","index","entry","entries","StyledUpButton","button","UpButtonIcon","div","bindActionCreators","sortAscending","sortData","ascArr","sortType","onClick","StyledDownButton","DownButtonIcon","sortDescending","descArr","StyledTableHeader","HeaderCell","th","StyledContentWrapper","span","labelArr","TableHeader","cellContent","StyledSpinner","svg","StyledSpinnerRow","StyledSpinnerCell","LoadingSpinner","viewBox","className","cx","cy","r","fill","strokeWidth","StyledTable","table","Table","this","length","Component","App","Boolean","window","location","hostname","match","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc12f800.chunk.js","sourcesContent":["/* utility function to parse those dates */\nexport const formattedDate = (newDate: any) => {\n\tconst event = new Date(newDate);\n\t// // did not add a locale to this for international use purposes.\n\treturn(event.toLocaleDateString())\n};\n\n/* utility function to format data */\nexport const formatPeopleData = (data: any) => (\n    data.map((item: any) => {\n        return({\n            name: item.name,\n            height: item.height,\n            mass: item.mass,\n            eye_color: item.eye_color,\n            hair_color: item.hair_color,\n            created: formattedDate(item.created),\n            edited: formattedDate(item.edited),\n        });\n    }) \n);\n\n/* a string comparison function for use in sorting */\nconst compareValues = (key: any, order = 'asc') => {\n\n  return function innerSort(a: any, b: any) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n    // checks if string is actually a string of numbers\n    const isNum = (val: string) => (/^\\d+$/.test(val));\n\n    const varA = (typeof a[key] === 'string' && isNum(a[key]) === false)\n      ? a[key].toUpperCase() : parseInt(a[key], 10);\n    const varB = (typeof b[key] === 'string' && isNum(b[key]) === false)\n      ? b[key].toUpperCase() : parseInt(b[key], 10);\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) { \n      comparison = -1;\n    }\n    return (\n      (order === 'desc') ? (comparison * -1) : comparison\n    );\n  };\n\n  // return innerSort(, b);\n}\n\n/* utility function to format data for reducer */\nconst formatData = (data: string) => (\n        (data === \"eye color\" || data === \"hair color\") ? data.replace(' ', \"_\") : data);\n\nexport const sortArrayData = (sortString: string, arr: Array<Object>, order: string) => {\n\n  const ascFormattedData = formatData(sortString);\n  const vals = compareValues(ascFormattedData, order)\n  return [...arr].sort(vals);\n\n};\n\n","// utils\nimport { \n    formatPeopleData,\n    sortArrayData,\n} from '../../Utils/utilityFunctions';\n\nexport const FETCH_PEOPLE_SUCCESS = 'FETCH_PEOPLE_SUCCESS';\nexport const SORT_ITEMS_ASCENDING = 'SORT_ITEMS_ASCENDING';\nexport const SORT_ITEMS_DESCENDING = 'SORT_ITEMS_DESCENDING';\n\nexport const fetchPeople = () => (\n  (dispatch: any) => {\n    fetch('https://swapi.co/api/people')\n    .then(results => results.json())\n    .then(data => {\n        console.log('data', data)\n        dispatch({\n        type: FETCH_PEOPLE_SUCCESS,\n        people: formatPeopleData(data.results)\n    })})\n    .catch(error => console.log('oh noes, something went wrong! ', error));\n  }\n);\n\nexport const sortAscending = (sortData = '', arr=[{}]) => {\n    const ascArr = sortArrayData(sortData, arr, 'asc');\n    return ({\n        type: SORT_ITEMS_ASCENDING,\n        sortBy: ascArr,\n    });\n};\n\nexport const sortDescending = (sortData = '', arr=[{}]) => {\n    const descArr = sortArrayData(sortData, arr, 'desc');\n    return ({\n        type: SORT_ITEMS_DESCENDING,\n        sortBy: descArr,\n    });\n};\n","import { combineReducers } from 'redux';\nimport { \n\tFETCH_PEOPLE_SUCCESS,\n\tSORT_ITEMS_ASCENDING,\n\tSORT_ITEMS_DESCENDING, \n} from '../Actions/Actions'; \n\nconst peopleState = {\n  people: [],\n};\n\nexport const peopleReducer = (state = peopleState, action: any) => {\n\tswitch(action.type) {\n\t\tcase FETCH_PEOPLE_SUCCESS:\n\t\t\treturn Object.assign({}, state, { people: action.people });\n\t\tcase SORT_ITEMS_ASCENDING:\n\t\t\treturn Object.assign({}, state, { people: action.sortBy })\n\t\tcase SORT_ITEMS_DESCENDING:\n\t\t\treturn Object.assign({}, state, { people: action.sortBy })\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({\n\tpeopleReducer,\n});","// constants\nexport const sizes = {\n  small: '5px',\n  medium: '10px',\n  large: '20px',\n  xlarge: '40px',\n};\n\nexport const colors = {\n  white: '#ffffff',\n  black: '#141414',\n  borderGray: '#ccc',\n  red: '#d9534f',\n  lightBlue: '#5bc0de',\n  blue: '#428bca',\n  green: '#5cb85c',\n};\n","import styled from \"styled-components\";\nimport { colors, sizes } from '../../../Utils/constants';\n\nexport const StyledTableCell = styled.td`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: auto;\n\tmin-width: 150px;\n\tborder-right: 1px solid ${colors.borderGray};\n\tpadding: ${sizes.small} 0;\n\t&:last-of-type{\n\t\tborder-right: none;\n\t}\n`;","import React from 'react';\nimport {\n\tStyledTableCell,\n} from './TableCellStyles';\n\ninterface CellProps {\n\tchildren?: any;\n}\n\nconst TableCell: React.FC<CellProps> = (props) => (\n\t<StyledTableCell>\n\t\t{props.children}\n\t</StyledTableCell>\n);\n\nexport default TableCell;","import styled from \"styled-components\";\nimport { colors } from '../../../Utils/constants';\n\nexport const StyledTableRow = styled.tr`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder-bottom: 1px solid ${colors.borderGray}\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport TableCell from '../TableCell/TableCell';\nimport {\n\tStyledTableRow,\n} from './TableRowStyles';\n\ninterface TableRowProps {\n\tallPeople?: any;\n}\n\nconst TableRowCells = (entry: any) => (\n\tObject.entries(entry).map((item: any, index: number) => (\n\t\t<TableCell key={`TableCell-${index}`}>{item[1]}</TableCell>\n\t))\n)\n\nconst TableRow: React.FC<TableRowProps> = (props) => {\n\tconst { allPeople } = props;\n\treturn (\n\t\tallPeople.map((item: any, index: number) => (\n\t\t\t<StyledTableRow\n\t\t\t\tkey={`styledTableRow-${index}`}\n\t\t\t>\n\t\t\t\t{TableRowCells(item)}\n\t\t\t</StyledTableRow>\n\t\t))\n\t);\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    allPeople: state.peopleReducer.people,\n  }\n};\n\nexport default connect(mapStateToProps)(TableRow);","import styled from \"styled-components\";\nimport { colors, sizes } from '../../../Utils/constants';\n\nexport const StyledUpButton = styled.button`\n\tdisplay: block;\n\tborder: none;\n\tbackground-color: transparent;\n\twidth: ${sizes.medium};\n\theight: ${sizes.medium};\n\tmargin: 2px;\n`;\n\nexport const UpButtonIcon = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-left: ${sizes.small} solid transparent;\n\tborder-right: ${sizes.small} solid transparent;\n\tborder-bottom: 10px solid ${ colors.red };\n`;\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// actions\nimport { sortAscending } from '../../../Redux/Actions/Actions';\n\n// styles\nimport {\n\tStyledUpButton,\n\tUpButtonIcon,\n} from './UpButtonStyles';\n\ninterface UpButtonProps {\n\tsortType: string;\n\tsortAscending(data: string, arr: any): any;\n\tallPeople?: Array<Object>;\n}\n\nconst UpButton: React.FC<UpButtonProps> = props => {\n\tconst {\n\t\tsortType,\n\t\tsortAscending,\n\t\tallPeople,\n\t} = props;\n\n\treturn (\n\t\t<StyledUpButton\n\t\t\tonClick={() => sortAscending(sortType, allPeople)}\n\t\t>\n\t\t\t<UpButtonIcon />\n\t\t</StyledUpButton>\n\t);\n}\n\n\nconst mapStateToProps = (state: any) => {\n  return {\n    allPeople: state.peopleReducer.people,\n  }\n};\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n    sortAscending: (data, arr) => sortAscending(data, arr),\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpButton);\n\n","import styled from \"styled-components\";\nimport { colors, sizes } from '../../../Utils/constants';\n\nexport const StyledDownButton = styled.button`\n\tdisplay: block;\n\tborder: none;\n\tbackground-color: transparent;\n\twidth: ${sizes.medium};\n\theight: ${sizes.medium};\n\tmargin: 2px;\n`;\n\nexport const DownButtonIcon = styled.div`\n\twidth: 0;\n\theight: 0;\n\tborder-left: ${sizes.small} solid transparent;\n\tborder-right: ${sizes.small} solid transparent;\n\tborder-top: ${sizes.medium} solid ${colors.red};\n`;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// actions\nimport { sortDescending } from '../../../Redux/Actions/Actions';\n\n// styles\nimport {\n\tStyledDownButton,\n\tDownButtonIcon,\n} from './DownButtonStyles';\n\ninterface DownButtonProps {\n\tsortType: string;\n\tsortDescending(data: string, arr: any): any;\n\tallPeople?: Array<Object>;\n}\n\nconst DownButton: React.FC<DownButtonProps> = props => {\n\tconst {\n\t\tsortType,\n\t\tsortDescending,\n\t\tallPeople,\n\t} = props;\n\treturn (\n\t\t<StyledDownButton\n\t\t\tonClick={() => sortDescending(sortType, allPeople)}\n\t\t>\n\t\t\t<DownButtonIcon />\n\t\t</StyledDownButton>\n\t);\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    allPeople: state.peopleReducer.people,\n  }\n};\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n    sortDescending: (data, arr) => sortDescending(data, arr),\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownButton);\n","import styled from \"styled-components\";\nimport { colors, sizes } from '../../../Utils/constants';\n\nexport const StyledTableHeader = styled.tr`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder-bottom: 3px solid ${colors.black};\n\tpadding: ${sizes.small} 0;\n`;\n\nexport const HeaderCell = styled.th`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 14%;\n`;\n\nexport const StyledContentWrapper = styled.span`\n\tmargin: 0 ${sizes.small};\n`;","import React from 'react';\nimport UpButton from '../../Buttons/UpButton/UpButton';\nimport DownButton from '../../Buttons/DownButton/DownButton';\nimport {\n\tStyledTableHeader,\n\tHeaderCell,\n\tStyledContentWrapper,\n} from './TableHeaderStyles';\n\n\nconst labelArr = ['name', 'height', 'mass', 'eye color', 'hair color', 'created', 'edited'];\n\nconst TableHeader: React.FC = () => {\n\treturn (\n\t\t<StyledTableHeader>\n\t\t\t{labelArr.map((cellContent: string, index: number) => (\n\t\t\t\t<HeaderCell key={`headerCell-${index}`}>\n\t\t\t\t\t<UpButton sortType={cellContent} />\n\t\t\t\t\t<DownButton sortType={cellContent} />\n\t\t\t\t\t<StyledContentWrapper>{cellContent}</StyledContentWrapper>\n\t\t\t\t</HeaderCell>\n\t\t\t))}\n\t\t</StyledTableHeader>\n\t);\n}\n\nexport default TableHeader;","import styled from \"styled-components\";\nimport { colors, sizes } from '../../Utils/constants';\n\nexport const StyledSpinner = styled.svg`\n  animation: rotate 2s linear infinite;\n  margin: -25px 0 0 -25px;\n  width: 50px;\n  height: 50px;\n  \n  & .path {\n    stroke: ${colors.red};\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n  \n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport const StyledSpinnerRow = styled.tr`\n  display: block;\n  margin: ${sizes.large} auto;\n`;\n\nexport const StyledSpinnerCell = styled.td`\n  display: block;\n  margin: 0 auto;\n`;","import React from 'react';\nimport {\n\tStyledSpinner,\n\tStyledSpinnerRow,\n\tStyledSpinnerCell,\n} from './LoadingSpinnerStyles';\n\nconst LoadingSpinner: React.FC = () => {\n\treturn (\n\t\t<StyledSpinnerRow>\n\t\t\t<StyledSpinnerCell>\n\t\t\t\t<StyledSpinner viewBox=\"0 0 50 50\">\n\t\t\t\t  <circle\n\t\t\t\t    className=\"path\"\n\t\t\t\t    cx=\"25\"\n\t\t\t\t    cy=\"25\"\n\t\t\t\t    r=\"20\"\n\t\t\t\t    fill=\"none\"\n\t\t\t\t    strokeWidth=\"4\"\n\t\t\t\t  />\n\t\t\t\t</StyledSpinner>\n\t\t\t</StyledSpinnerCell>\n\t\t</StyledSpinnerRow>\n\t);\n}\n\nexport default LoadingSpinner;\n\n","import styled from \"styled-components\";\nimport { colors, sizes } from '../../Utils/constants';\n\nexport const StyledTable = styled.table`\n\tdisplay: inline-block;\n\tmargin: ${sizes.large } auto 0;\n\tbackground-color: ${colors.white};\n\tborder: 3px solid ${colors.black};\n\n`;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// utils\nimport { fetchPeople } from '../../Redux/Actions/Actions';\n\n// components\nimport TableRow from './TableRow/TableRow';\nimport TableHeader from './TableHeader/TableHeader';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport {\n\tStyledTable,\n} from './TableStyles';\n\ninterface TableProps {\n\tfetchPeople(): any;\n\tallPeople: Array<Object>;\n}\n\nclass Table extends Component<TableProps> {\n\n\tcomponentDidMount() {\n\t  this.props.fetchPeople();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<StyledTable>\n\t\t\t\t<thead>\n\t\t\t\t\t<TableHeader />\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{this.props.allPeople.length > 0 ? <TableRow /> : <LoadingSpinner />}\n\t\t\t\t</tbody>\n\t\t\t</StyledTable>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    allPeople: state.peopleReducer.people || [{}],\n  }\n};\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n    fetchPeople: fetchPeople,\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React from 'react';\n\n// components\nimport Table from \"../../Components/Table/Table\";\nimport './App.css';\n\nconst App: React.FC = () => (\n\t<div className=\"App\">\n\t\t<Table />\n\t</div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Redux/Reducers/rootReducer';\n\nimport App from './Pages/App/App';\nimport * as serviceWorker from './Utils/serviceWorker';\nimport './index.css';\n\ninterface Window {\n  __REDUX_DEVTOOLS_EXTENSION__: any;\n}\n\nconst store = createStore(\n\trootReducer,   \n\tcomposeWithDevTools(\n\tapplyMiddleware(thunk)),\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n  \t\t<App />\n  \t</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}